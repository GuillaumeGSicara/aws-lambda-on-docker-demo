[tool.poetry]
name = "aws-lambda-on-docker-demo"
version = "0.1.0"
description = "This is a demo repo to demonstrate the use of a dockerized AWS lambda function"
authors = ["Guillaume Gonde <guillaume.gonde@sicara.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "3.9.19"
aiofiles = "23.2.1"
aiohttp = "3.9.5"
aiosignal = "1.3.1"
annotated-types = "0.7.0"
anyio = "3.7.1"
async-timeout = "4.0.3"
asyncer = "0.0.2"
attrs = "23.2.0"
bidict = "0.23.1"
certifi = "2024.6.2"
charset-normalizer = "3.3.2"
chevron = "0.14.0"
click = "8.1.7"
dataclasses-json = "0.5.14"
deprecated = "1.2.14"
exceptiongroup = "1.2.1"
fastapi = "0.110.3"
fastapi-socketio = "0.0.10"
filetype = "1.2.0"
frozenlist = "1.4.1"
googleapis-common-protos = "1.63.1"
grpcio = "1.64.1"
h11 = "0.14.0"
httpcore = "1.0.5"
httpx = "0.27.0"
idna = "3.7"
importlib-metadata = "7.1.0"
jsonpatch = "1.33"
jsonpointer = "2.4"
langchain = "0.2.1"
langchain-core = "0.2.3"
langchain-text-splitters = "0.2.0"
langsmith = "0.1.69"
lazify = "0.4.0"
literalai = "0.0.601"
marshmallow = "3.21.2"
multidict = "6.0.5"
mypy-extensions = "1.0.0"
nest-asyncio = "1.6.0"
numpy = "1.26.4"
opentelemetry-api = "1.25.0"
opentelemetry-exporter-otlp = "1.25.0"
opentelemetry-exporter-otlp-proto-common = "1.25.0"
opentelemetry-exporter-otlp-proto-grpc = "1.25.0"
opentelemetry-exporter-otlp-proto-http = "1.25.0"
opentelemetry-instrumentation = "0.46b0"
opentelemetry-proto = "1.25.0"
opentelemetry-sdk = "1.25.0"
opentelemetry-semantic-conventions = "0.46b0"
orjson = "3.10.3"
packaging = "23.2"
protobuf = "4.25.3"
pydantic = "2.7.3"
pydantic-core = "2.18.4"
pyjwt = "2.8.0"
python-dotenv = "1.0.1"
python-engineio = "4.9.1"
python-multipart = "0.0.9"
python-socketio = "5.11.2"
pyyaml = "6.0.1"
requests = "2.32.3"
simple-websocket = "1.0.0"
sniffio = "1.3.1"
sqlalchemy = "2.0.30"
starlette = "0.37.2"
syncer = "2.0.3"
tenacity = "8.3.0"
tomli = "2.0.1"
typing-inspect = "0.9.0"
typing-extensions = "4.12.1"
uptrace = "1.24.0"
urllib3 = "2.2.1"
uvicorn = "0.25.0"
watchfiles = "0.20.0"
wrapt = "1.16.0"
wsproto = "1.2.0"
yarl = "1.9.4"

[tool.commitizen]
version = "0.1.0"
tag_format = "v$version"
version_files = [
  "pyproject.toml:tool.poetry.version",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
